create table if not exists USERS
(
    USER_ID  INTEGER auto_increment,
    EMAIL    CHARACTER VARYING(30) not null,
    LOGIN    CHARACTER VARYING(20) not null,
    NAME     CHARACTER VARYING(50),
    BIRTHDAY DATE                  not null,
    constraint USERS_PK
        primary key (USER_ID)
);

create table if not exists FRIENDSHIP
(
    USER_ID   INTEGER not null,
    FRIEND_ID INTEGER not null,
    STATUS    BOOLEAN default FALSE,
    constraint FRIENDSHIP_USERS_USER_ID_FK
        foreign key (FRIEND_ID) references USERS ON DELETE CASCADE ,
    constraint FRIENDSHIP_USERS_USER_ID_USER_ID_FK
        foreign key (USER_ID) references USERS ON DELETE CASCADE
);

create table if not exists FILMS
(
    FILM_ID      INTEGER auto_increment,
    FILM_NAME    CHARACTER VARYING(50) not null,
    DESCRIPTION  CHARACTER VARYING(200),
    RELEASE_DATE DATE                  not null,
    GENRE_ID     INTEGER,
    RATE_ID      INTEGER,
    DURATION     INTEGER,
    constraint FILMS_PK
        primary key (FILM_ID),
    constraint FILMS_GENRE_GENRE_ID_FK
        foreign key (GENRE_ID) references GENRE ON DELETE SET NULL,
    constraint FILMS_RATE_RATE_ID_FK
        foreign key (RATE_ID) references RATE ON DELETE SET NULL
);



create unique index FILMS_FILM_ID
    on FILMS (FILM_ID);

alter table FILMS
    add constraint FILMS_PK
        primary key (FILM_ID);




create table if not exists LIKES
(
    FILM_ID INTEGER not null,
    USER_ID INTEGER not null,
    constraint LIKES_FILMS_FILM_ID_FK
        foreign key (FILM_ID) references FILMS ON DELETE CASCADE,
    constraint LIKES_USERS_USER_ID_FK
        foreign key (USER_ID) references USERS ON DELETE CASCADE
);





create table if not exists RATE
(
    RATE_ID   INTEGER auto_increment,
    RATE_NAME CHARACTER VARYING(10),
    constraint RATE_PK
        primary key (RATE_ID)
);

create unique index RATE_FILM_ID_UINDEX
    on RATE (RATE_ID);

create table if not exists GENRE
(
    GENRE_ID   INTEGER auto_increment,
    GENRE_NAME CHARACTER VARYING(20) not null
);

create unique index GENRE_GENRE_ID_UINDEX
    on GENRE (GENRE_ID);

create unique index GENRE_GENRE_NAME_UINDEX
    on GENRE (GENRE_NAME);

alter table GENRE
    add constraint GENRE_PK
        primary key (GENRE_ID);


















